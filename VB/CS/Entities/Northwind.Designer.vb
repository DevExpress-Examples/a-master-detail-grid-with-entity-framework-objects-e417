'====================================================================================================
'The Free Edition of Instant VB limits conversion output to 100 lines per file.

'To subscribe to the Premium Edition, visit our website:
'https://www.tangiblesoftwaresolutions.com/order/order-instant-vb.html
'====================================================================================================

'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.EntityClient
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization

<Assembly: EdmSchemaAttribute()>
#Region "EDM Relationship Metadata"

<Assembly: EdmRelationshipAttribute("NorthwindModel", "FK_Orders_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Entities.Customers), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Entities.Orders))>

#End Region

Namespace Entities
    #Region "Contexts"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Partial Public Class NorthwindEntities
        Inherits ObjectContext

        #Region "Constructors"

        ''' <summary>
        ''' Initializes a new NorthwindEntities object using the connection string found in the 'NorthwindEntities' section of the application configuration file.
        ''' </summary>
        Public Sub New()
            MyBase.New("name=NorthwindEntities", "NorthwindEntities")
            OnContextCreated()
        End Sub

        ''' <summary>
        ''' Initialize a new NorthwindEntities object.
        ''' </summary>
        Public Sub New(ByVal connectionString As String)
            MyBase.New(connectionString, "NorthwindEntities")
            OnContextCreated()
        End Sub

        ''' <summary>
        ''' Initialize a new NorthwindEntities object.
        ''' </summary>
        Public Sub New(ByVal connection As EntityConnection)
            MyBase.New(connection, "NorthwindEntities")
            OnContextCreated()
        End Sub

        #End Region

        #Region "Partial Methods"

        Partial Private Sub OnContextCreated()
        End Sub

        #End Region

        #Region "ObjectSet Properties"

        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property Customers() As ObjectSet(Of Customers)
            Get
                If (_Customers Is Nothing) Then
                    _Customers = MyBase.CreateObjectSet(Of Customers)("Customers")
                End If
                Return _Customers
            End Get
        End Property
        Private _Customers As ObjectSet(Of Customers)

        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property Orders() As ObjectSet(Of Orders)
            Get
                If (_Orders Is Nothing) Then
                    _Orders = MyBase.CreateObjectSet(Of Orders)("Orders")
                End If
                Return _Orders
            End Get
        End Property
        Private _Orders As ObjectSet(Of Orders)

        #End Region

        #Region "AddTo Methods"

        ''' <summary>
        ''' Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        ''' </summary>

        Public Sub AddToCustomers(ByVal customers_Renamed As Customers)
            MyBase.AddObject("Customers", customers_Renamed)
        End Sub

        ''' <summary>
        ''' Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        ''' </summary>

        Public Sub AddToOrders(ByVal orders_Renamed As Orders)
            MyBase.AddObject("Orders", orders_Renamed)
        End Sub

        #End Region

    End Class

    #End Region

    #Region "Entities"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmEntityTypeAttribute(NamespaceName:="NorthwindModel", Name:="Customers")>
    <Serializable()>
    <DataContractAttribute(IsReference:=True)>
    Partial Public Class Customers
        Inherits EntityObject

        #Region "Factory Method"

        ''' <summary>
        ''' Create a new Customers object.
        ''' </summary>
        ''' <param name="companyName">Initial value of the CompanyName property.</param>
        ''' <param name="customerID">Initial value of the CustomerID property.</param>
        Public Shared Function CreateCustomers(ByVal companyName As Global.System.String, ByVal customerID As Global.System.String) As Customers

            Dim customers_Renamed As New Customers()
            customers_Renamed.CompanyName = companyName
            customers_Renamed.CustomerID = customerID
            Return customers_Renamed
        End Function

        #End Region

        #Region "Primitive Properties"

        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True)>
        <DataMemberAttribute()>
        Public Property Address() As Global.System.String
            Get
                Return _Address
            End Get
            Set(ByVal value As System.String)
                OnAddressChanging(value)
                ReportPropertyChanging("Address")
                _Address = StructuralObject.SetValidValue(value, True)
                ReportPropertyChanged("Address")
                OnAddressChanged()
            End Set
        End Property
        Private _Address As Global.System.String
        Partial Private Sub OnAddressChanging(ByVal value As Global.System.String)
        End Sub
        Partial Private Sub OnAddressChanged()
        End Sub

        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        <EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True)>
        <DataMemberAttribute()>
        Public Property City() As Global.System.String
            Get
                Return _City
            End Get
            Set(ByVal value As System.String)
                OnCityChanging(value)
                ReportPropertyChanging("City")
                _City = StructuralObject.SetValidValue(value, True)
                ReportPropertyChanged("City")
                OnCityChanged()
            End Set
        End Property
        Private _City As Global.System.String
        Partial Private Sub OnCityChanging(ByVal value As Global.System.String)
        End Sub
        Partial Private Sub OnCityChanged()

'====================================================================================================
'End of the allowed output for the Free Edition of Instant VB.

'To subscribe to the Premium Edition, visit our website:
'https://www.tangiblesoftwaresolutions.com/order/order-instant-vb.html
'====================================================================================================
